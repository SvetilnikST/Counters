package pst.beans.register;

import org.joda.time.LocalDateTime;
import org.primefaces.model.SortOrder;
import pst.beans.AbstractDao;
import pst.beans.object.TblObjectEntity;
import pst.beans.schedule.TblScheduleEntity;

import javax.ejb.LocalBean;
import javax.ejb.Stateless;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;
import java.util.List;
import java.util.Map;

@LocalBean
@Stateless
public class RegisterDAO extends AbstractDao<TblScheduleEntity> {
    public RegisterDAO(){
        super(TblScheduleEntity.class);
    }

    public int getTotalCount(Map<String, Object> filters) {

        EntityManager entityManager = getEntityManager();

        Integer dateFirstFilter = ((Long) filters.get("dateFrom")).intValue();
        Integer dateLastFilter =  ((Long) filters.get("dateLast")).intValue();
        Integer statusExecute = (Integer) filters.get("statusExecute");
        Boolean inStore1 = (Boolean) filters.get("inStore1");
        Integer deviceId = (Integer) filters.get("deviceId");
        int rez;

        if(inStore1  ==true) {
            rez = ((Long) entityManager.createQuery("select count(shedul.id) from TblScheduleEntity shedul  left join TblBoxCommonEntity box ON box.tblScheduleEntity=shedul where shedul.statusexecute =:statusExecute and shedul.deviceId =:deviceId  and box.timeRequest between :dateFirst AND :dateLast")
                    .setParameter("statusExecute", statusExecute)
                    .setParameter("dateFirst", dateFirstFilter)
                    .setParameter("dateLast", dateLastFilter)
                    .setParameter("deviceId", deviceId)
                    .getSingleResult()).intValue();
        }

        return rez;

    }

    public List<TblScheduleEntity> load(int first, int pageSize, String sortField, SortOrder sortOrder, Map<String, Object> filters) {

        EntityManager entityManager = getEntityManager();

        Integer dateFirstFilter = ((Long) filters.get("dateFrom")).intValue();
        Integer dateLastFilter =  ((Long) filters.get("dateLast")).intValue();
        Integer statusExecute = (Integer) filters.get("statusExecute");
        Boolean inStore1 = (Boolean) filters.get("inStore1");
        Integer deviceId = (Integer) filters.get("deviceId");
        List<TblScheduleEntity> rez;

        if(inStore1  ==null){
            rez = ( entityManager.createQuery("select shedul from TblScheduleEntity shedul left join TblBoxCommonEntity box ON box.tblScheduleEntity=shedul where shedul.statusexecute =:statusExecute and shedul.deviceId =:deviceId and box.timeRequest between :dateFirst AND :dateLast")
                    .setParameter("dateFirst",dateFirstFilter)
                    .setParameter("dateLast",dateLastFilter)
                    .setParameter("deviceId",deviceId)
                    .setParameter("statusExecute",statusExecute)
                    .getResultList());
        }else {
            rez = (entityManager.createQuery("select shedul from TblScheduleEntity shedul left join TblBoxCommonEntity box ON box.tblScheduleEntity=shedul where shedul.statusexecute =:statusExecute and box.instore1=:inStore1 and shedul.deviceId =:deviceId and box.timeRequest between :dateFirst AND :dateLast")
                    .setParameter("dateFirst", dateFirstFilter)
                    .setParameter("dateLast", dateLastFilter)
                    .setParameter("deviceId", deviceId)
                    .setParameter("statusExecute", statusExecute)
                    .setParameter("inStore1", inStore1)
                    .getResultList());
        }

        return rez;

    }


}
